til-akka-typed {
  routes {
    # If ask takes more time than this to complete the request is failed
    ask-timeout = 5s
  }
  server {
    host = "0.0.0.0"
    port = 8080
    port = ${?HTTP_PORT}
  }
}

akka {
  persistence {
    journal = {
      plugin = "akka.persistence.journal.inmem"
      inmem.class = "akka.persistence.journal.inmem.InmemJournal"
    }
    snapshot-store = {
      plugin = "akka.persistence.snapshot-store.local"
      local.dir = "target/snapshots"
    }
  }
  actor {
    provider = "cluster"
    allow-java-serialization = "on"
  }
  remote.artery.canonical {
    hostname = "0.0.0.0"
    hostname = ${?SEED_HOST}
    port = 2551
    port = ${?SEED_PORT}
  }

  cluster {
    seed-nodes = [
      "akka://ClusterSystem@0.0.0.0:2551",
      ]
    seed-nodes = ${?SEED_NODES}

    shutdown-after-unsuccessful-join-seed-nodes = 60s
    
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  management {
    http {
      hostname = "127.0.0.1"
      port = 8558
    }
    cluster.bootstrap {
      contact-point-discovery {
        discovery-method = kubernetes-api
      }
    }
    health-checks {
      readiness-checks {
        example-ready = "com.kuramapommel.til_akka_typed.HealthChecker"
      }
    }
  }

  coordinated-shutdown.exit-jvm = on
}