apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: til-akka-typed-stateful-set
spec:
  selector:
    matchLabels:
      app: node1
  serviceName: "til-akka-typed-service"
  replicas: 3
  template:
    metadata:
      labels:
        app: node1
    spec:
      containers:
        - name: node1
          image: kuramapommel/til-akka-typed:latest
          ports:
            - containerPort: 8080
          env:
            - name: HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SEED_PORT
              value: "2551"
            - name: HTTP_PORT
              value: "8080"
            - name: SEED_NODES.0
              value: "akka://ClusterSystem@til-akka-typed-stateful-set-0.til-akka-typed-service:2551"
            - name: SEED_NODES.1
              value: "akka://ClusterSystem@til-akka-typed-stateful-set-1.til-akka-typed-service:2551"
            - name: SEED_NODES.2
              value: "akka://ClusterSystem@til-akka-typed-stateful-set-2.til-akka-typed-service:2551"
          command: ["bash", "-c"]
          args:
            - export SEED_HOST=${HOST_NAME}.til-akka-typed-service;
              java -Dconfig.resource=/persistence_docker-compose.conf -jar /app/til-akka-typed.jar;

---
apiVersion: v1
kind: Service
metadata:
  name: til-akka-typed-service
spec:
  clusterIP: None
  ports:
    - port: 2551
      targetPort: 2551
      protocol: TCP
  selector:
    app: node1

---
apiVersion: v1
kind: Service
metadata:
  name: til-akka-typed-api-service
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      nodePort: 30080
  selector:
    app: node1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dynamodb-local-deployment
spec:
  selector:
    matchLabels:
      app: dynamodb-local
  replicas: 1
  template:
    metadata:
      labels:
        app: dynamodb-local
    spec:
      containers:
        - name: dynamodb-local
          image: amazon/dynamodb-local:latest
          ports:
            - containerPort: 8000
          args: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-inMemory"]
          volumeMounts:
            - mountPath: /data
              name: data-volume
      volumes:
        - name: data-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: dynamodb-local-service
spec:
  type: NodePort
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      nodePort: 30000
  selector:
    app: dynamodb-local
