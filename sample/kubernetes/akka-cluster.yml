# サンプルコードを参考に namespace を定義
# https://doc.akka.io/libraries/akka-management/current/attachments/akka-sample-cluster-kubernetes-scala.zip
apiVersion: v1
kind: Namespace
metadata:
  name: til-akka-typed-1
  labels:
    name: til-akka-typed-1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: til-akka-typed
  name: til-akka-typed
  namespace: til-akka-typed-1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: til-akka-typed
  template:
    metadata:
      labels:
        app: til-akka-typed
    spec:
      containers:
        - name: til-akka-typed
          image: kuramapommel/til-akka-typed:latest
          # readinessProbe:
          #   httpGet:
          #     path: /ready
          #     port: management
          # livenessProbe:
          #   httpGet:
          #     path: /alive
          #     port: management
          ports:
            - name: management
              containerPort: 8558
              protocol: TCP
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: REQUIRED_CONTACT_POINT_NR
              value: "2"
            - name: HTTP_PORT
              value: "8080"
            - name: DYNAMODB_HOST
              value: "dynamodb-local-service.default.svc.cluster.local"
            - name: DYNAMODB_PORT
              value: "8000"
          resources:
            limits:
              memory: 1024Mi
            requests:
              cpu: 2
              memory: 1024Mi
---
# kubernetes-api を利用するために必要な権限設定
# https://doc.akka.io/libraries/akka-management/current/kubernetes-deployment/forming-a-cluster.html#role-based-access-control
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-reader
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: read-pods
subjects:
  - kind: User
    name: system:serviceaccount:til-akka-typed-1:default
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io
